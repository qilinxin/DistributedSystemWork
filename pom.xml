<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- 父项目的 groupId、artifactId 和 version -->
    <groupId>org.adelaide</groupId>
    <artifactId>Assignment2</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging> <!-- 父项目的打包类型为 pom -->

    <!-- 子模块列表 -->
    <modules>
        <module>aggregation-server</module>
        <module>context-server</module>

    </modules>

    <!-- 父项目的全局属性 -->
    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <!-- 父项目的依赖管理 -->
    <dependencyManagement>
        <dependencies>
            <!-- 在这里可以统一管理依赖的版本 -->
            <!-- 例如 Spring Boot 的依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>3.1.0</version> <!-- 选择合适的 Spring Boot 版本 -->
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 父项目的插件管理 -->
    <build>
        <pluginManagement>
            <plugins>
                <!-- Spring Boot Maven 插件 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>3.1.0</version> <!-- 与 Spring Boot 版本一致 -->
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- 可选：设置子模块的通用输出路径 -->
        <directory>${project.basedir}/target</directory>
    </build>

</project>
